# 
# abstract-parser ‚Äî proprietary, source-available software (not open-source).    
# Copyright (c) 2025 Abakar Letifov
# (–õ–µ—Ç–∏—Ñ–æ–≤ –ê–±–∞–∫–∞—Ä –ó–∞–º–µ–¥–∏–Ω–æ–≤–∏—á). All rights reserved.
# 
# Use of this Work is permitted only for viewing and internal evaluation,        
# under the terms of the LICENSE file in the repository root.
# If you do not or cannot agree to those terms, do not use this Work.
# 
# THE WORK IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND.
# 

name: Criterion Benchmarks

on:
  push:
    tags: ["bench-*"]

jobs:
  benchmark:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: dtolnay/rust-toolchain@nightly

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          shared-key: rust-common

      - name: Install cargo-criterion
        run: cargo install --locked cargo-criterion || true

      - name: Run benchmarks
        run: |
          cargo bench "features grammar" -p parser-core --bench features
      
      - run: pip install beautifulsoup4
          
      - name: Append benchmark summary to job summary
        run: python3 scripts/bench/criterion_json_to_md.py >> $GITHUB_STEP_SUMMARY

      # # ‚úÖ –ü—É–±–ª–∏–∫—É–µ–º Check Run –≤—Ä—É—á–Ω—É—é (—á—Ç–æ–±—ã –±—ã–ª–æ –≤–∏–¥–Ω–æ –ø–æ–¥ –∫–æ–º–º–∏—Ç–æ–º)
      # - name: Publish Check Run
      #   if: always()
      #   uses: LouisBrunner/checks-action@v2
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     name: Criterion Benchmarks
      #     conclusion: ${{ job.status }}
      #     output_text_description_file: criterion-summary.md
      #     output: '{"summary":"Criterion benchmark summary"}'

      # # üìä –ü—É–±–ª–∏–∫—É–µ–º –∫–∞–∫ –æ–±—ã—á–Ω—ã–π GitHub Test Report (JUnit)
      # - name: Publish Criterion report
      #   uses: dorny/test-reporter@v1
      #   with:
      #     name: Criterion Benchmarks
      #     path: criterion.junit.xml
      #     reporter: java-junit
      #     fail-on-error: false

      # # üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã
      # - name: Upload raw results
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: criterion-results
      #     path: |
      #       results.jsonl
      #       criterion.junit.xml
      #       criterion-summary.md
      #       target/criterion/**
